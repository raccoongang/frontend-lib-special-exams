{"version":3,"sources":["../src/hocs.jsx"],"names":["withExamStore","WrappedComponent","mapStateToProps","dispatchActions","ConnectedComp","retValue","props","examStore","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA;AACO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,gBAAD,EAAsE;AAAA,MAAnDC,eAAmD,uEAAjC,IAAiC;AAAA,MAA3BC,eAA2B,uEAAT,IAAS;AACjG,MAAMC,aAAa,GAAG,yBAAQF,eAAR,EAAyBC,eAAzB,EAA0CF,gBAA1C,CAAtB;;AACA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,wBAAW,6BAAC,aAAD;AAAe,MAAA,KAAK,EAAEC;AAAtB,OAAqCD,KAArC,EAAX;AAAA,GAAjB;;AACAD,EAAAA,QAAQ,CAACG,WAAT,2BAAwC,6BAAeP,gBAAf,CAAxC;AACA,SAAOI,QAAP;AACD,CALM","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { getDisplayName } from './helpers';\nimport { store as examStore } from './data';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const withExamStore = (WrappedComponent, mapStateToProps = null, dispatchActions = null) => {\n  const ConnectedComp = connect(mapStateToProps, dispatchActions)(WrappedComponent);\n  const retValue = (props) => <ConnectedComp store={examStore} {...props} />;\n  retValue.displayName = `WithExamStore(${getDisplayName(WrappedComponent)})`;\n  return retValue;\n};\n"],"file":"hocs.js"}