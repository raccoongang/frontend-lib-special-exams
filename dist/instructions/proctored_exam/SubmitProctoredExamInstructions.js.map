{"version":3,"sources":["../../../src/instructions/proctored_exam/SubmitProctoredExamInstructions.jsx"],"names":["SubmitProctoredExamInstructions","state","ExamStateContext","submitExam","exam","activeAttempt","examType","type","examName","exam_display_name","ExamType","ONBOARDING"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAM;AAC5C,MAAMC,KAAK,GAAG,uBAAWC,gBAAX,CAAd;AACA,MACEC,UADF,GAIIF,KAJJ,CACEE,UADF;AAAA,MAEEC,IAFF,GAIIH,KAJJ,CAEEG,IAFF;AAAA,MAGEC,aAHF,GAIIJ,KAJJ,CAGEI,aAHF;;AAKA,aAA2BD,IAAI,IAAI,EAAnC;AAAA,MAAcE,QAAd,QAAQC,IAAR;;AACA,MAA2BC,QAA3B,GAAwCH,aAAxC,CAAQI,iBAAR;AAEA,sBACE,yEACE;AAAI,IAAA,SAAS,EAAC,IAAd;AAAmB,mBAAY;AAA/B,kBACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,4CADL;AAEE,IAAA,cAAc,EAAC;AAFjB,IADF,CADF,eAOE,sDACE,sDACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,mDADL;AAEE,IAAA,cAAc,EAAC;AAFjB,IADF,CADF,eAOE,sDACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,mDADL;AAEE,IAAA,cAAc,EAAE,+DACd;AAHJ,IADF,CAPF,CAPF,EAsBGH,QAAQ,KAAKI,oBAASC,UAAtB,iBACC;AAAG,mBAAY;AAAf,kBACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,4CADL;AAEE,IAAA,cAAc,EAAE,uCACd,+DADc,GAEd,4DAJJ;AAKE,IAAA,MAAM,EAAE;AAAEH,MAAAA,QAAQ,EAARA;AAAF;AALV,IADF,CAvBJ,eAiCE,6BAAC,eAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEL,UAAnC;AAA+C,IAAA,SAAS,EAAC,MAAzD;AAAgE,mBAAY;AAA5E,kBACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,6CADL;AAEE,IAAA,cAAc,EAAC;AAFjB,IADF,CAjCF,CADF;AA0CD,CApDD;;eAsDeH,+B","sourcesContent":["import React, { useContext } from 'react';\nimport { FormattedMessage } from '@edx/frontend-platform/i18n';\nimport { Button } from '@edx/paragon';\nimport ExamStateContext from '../../context';\nimport { ExamType } from '../../constants';\n\nconst SubmitProctoredExamInstructions = () => {\n  const state = useContext(ExamStateContext);\n  const {\n    submitExam,\n    exam,\n    activeAttempt,\n  } = state;\n  const { type: examType } = exam || {};\n  const { exam_display_name: examName } = activeAttempt;\n\n  return (\n    <>\n      <h3 className=\"h3\" data-testid=\"proctored-exam-instructions-title\">\n        <FormattedMessage\n          id=\"exam.SubmitProctoredExamInstructions.title\"\n          defaultMessage=\"Are you sure you want to end your proctored exam?\"\n        />\n      </h3>\n      <ul>\n        <li>\n          <FormattedMessage\n            id=\"exam.SubmitProctoredExamInstructions.warningText1\"\n            defaultMessage='Make sure that you have selected \"Submit\" for each answer before you submit your exam.'\n          />\n        </li>\n        <li>\n          <FormattedMessage\n            id=\"exam.SubmitProctoredExamInstructions.warningText2\"\n            defaultMessage={'Once you click \"Yes, end my proctored exam\", the exam will'\n            + ' be closed, and your proctoring session will be submitted for review.'}\n          />\n        </li>\n      </ul>\n      {examType === ExamType.ONBOARDING && (\n        <p data-testid=\"submit-onboarding-exam\">\n          <FormattedMessage\n            id=\"exam.SubmitOnboardingExamInstructions.text\"\n            defaultMessage={'You are taking \"{examName}\" as an '\n            + 'onboarding exam. You must click “Yes, end my proctored exam” '\n            + 'and submit your proctoring session to complete onboarding.'}\n            values={{ examName }}\n          />\n        </p>\n      )}\n      <Button variant=\"primary\" onClick={submitExam} className=\"mr-2\" data-testid=\"end-exam-button\">\n        <FormattedMessage\n          id=\"exam.SubmitProctoredExamInstructions.submit\"\n          defaultMessage=\"Yes, end my proctored exam\"\n        />\n      </Button>\n    </>\n  );\n};\n\nexport default SubmitProctoredExamInstructions;\n"],"file":"SubmitProctoredExamInstructions.js"}