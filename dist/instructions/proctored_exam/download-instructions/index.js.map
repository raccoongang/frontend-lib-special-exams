{"version":3,"sources":["../../../../src/instructions/proctored_exam/download-instructions/index.jsx"],"names":["DownloadSoftwareProctoredExamInstructions","intl","skipProctoredExam","state","ExamStateContext","proctoringSettings","exam","getExamAttemptsData","allowProctoringOptOut","attempt","courseId","course_id","sequenceId","content_id","pollUrl","exam_started_poll_url","examCode","attempt_code","attemptId","attempt_id","downloadUrl","software_download_url","providerName","provider_name","supportEmail","provider_tech_support_email","supportPhone","provider_tech_support_phone","proctoringBackend","exam_proctoring_backend","instructions","systemCheckStatus","setSystemCheckStatus","downloadClicked","setDownloadClicked","withProviderInstructions","length","handleDownloadClick","then","data","status","ExamStatus","READY_TO_START","window","open","handleStartExamClick","Boolean","formatMessage","messages","softwareLoadedModalTitle","cannotStartModalTitle","softwareLoadedModalBody","cannotStartModalBody","propTypes","intlShape","isRequired","PropTypes","func"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,yCAAyC,GAAG,SAA5CA,yCAA4C,OAAiC;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,iBAAwB,QAAxBA,iBAAwB;AACjF,MAAMC,KAAK,GAAG,uBAAWC,gBAAX,CAAd;AACA,MACEC,kBADF,GAKIF,KALJ,CACEE,kBADF;AAAA,MAEEC,IAFF,GAKIH,KALJ,CAEEG,IAFF;AAAA,MAGEC,mBAHF,GAKIJ,KALJ,CAGEI,mBAHF;AAAA,MAIEC,qBAJF,GAKIL,KALJ,CAIEK,qBAJF;AAMA,MACEC,OADF,GAIIH,IAJJ,CACEG,OADF;AAAA,MAEaC,QAFb,GAIIJ,IAJJ,CAEEK,SAFF;AAAA,MAGcC,UAHd,GAIIN,IAJJ,CAGEO,UAHF;AAKA,MACyBC,OADzB,GAKIL,OALJ,CACEM,qBADF;AAAA,MAEgBC,QAFhB,GAKIP,OALJ,CAEEQ,YAFF;AAAA,MAGcC,SAHd,GAKIT,OALJ,CAGEU,UAHF;AAAA,MAIyBC,WAJzB,GAKIX,OALJ,CAIEY,qBAJF;AAMA,MACiBC,YADjB,GAKIjB,kBALJ,CACEkB,aADF;AAAA,MAE+BC,YAF/B,GAKInB,kBALJ,CAEEoB,2BAFF;AAAA,MAG+BC,YAH/B,GAKIrB,kBALJ,CAGEsB,2BAHF;AAAA,MAI2BC,iBAJ3B,GAKIvB,kBALJ,CAIEwB,uBAJF;;AAMA,cAAyBD,iBAAiB,IAAI,EAA9C;AAAA,MAAQE,YAAR,SAAQA,YAAR;;AACA,kBAAkD,qBAAS,EAAT,CAAlD;AAAA;AAAA,MAAOC,iBAAP;AAAA,MAA0BC,oBAA1B;;AACA,mBAA8C,qBAAS,KAAT,CAA9C;AAAA;AAAA,MAAOC,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAMC,wBAAwB,GAAGL,YAAY,IAAIA,YAAY,CAACM,MAAb,GAAsB,CAAvE;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,wCAAmBvB,OAAnB,6BACGwB,IADH,CACQ,UAACC,IAAD,EAAU;AACd,UAAIA,IAAI,CAACC,MAAL,KAAgBC,sBAAWC,cAA/B,EAA+C;AAC7CV,QAAAA,oBAAoB,CAAC,SAAD,CAApB;AACD,OAFD,MAEO;AACL,0CAAwBd,SAAxB;AACAyB,QAAAA,MAAM,CAACC,IAAP,CAAYxB,WAAZ,EAAyB,QAAzB;AACD;AACF,KARH;AASAc,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAXD;;AAaA,MAAMW,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC,wCAAmBpC,OAAO,CAACM,qBAA3B,6BACGuB,IADH,CACQ,UAACC,IAAD;AAAA,aACJA,IAAI,CAACC,MAAL,KAAgBC,sBAAWC,cAA3B,GACInC,mBAAmB,CAACG,QAAD,EAAWE,UAAX,CADvB,GAEIoB,oBAAoB,CAAC,SAAD,CAHpB;AAAA,KADR;AAMD,GAPD;;AASA,sBACE,uDACE,6BAAC,kBAAD;AAAW,IAAA,SAAS,EAAC;AAArB,kBACE,6BAAC,qBAAD;AACE,IAAA,MAAM,EAAEc,OAAO,CAACf,iBAAD,CADjB;AAEE,IAAA,KAAK,EACHA,iBAAiB,KAAK,SAAtB,GACI9B,IAAI,CAAC8C,aAAL,CAAmBC,kBAASC,wBAA5B,CADJ,GAEIhD,IAAI,CAAC8C,aAAL,CAAmBC,kBAASE,qBAA5B,CALR;AAOE,IAAA,IAAI,EACFnB,iBAAiB,KAAK,SAAtB,GACI9B,IAAI,CAAC8C,aAAL,CAAmBC,kBAASG,uBAA5B,CADJ,GAEIlD,IAAI,CAAC8C,aAAL,CAAmBC,kBAASI,oBAA5B,CAVR;AAYE,IAAA,WAAW,EAAE;AAAA,aAAMpB,oBAAoB,CAAC,EAAD,CAA1B;AAAA;AAZf,IADF,eAeE;AAAK,IAAA,SAAS,EAAC,IAAf;AAAoB,mBAAY;AAAhC,kBACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,sDADL;AAEE,IAAA,cAAc,EAAC;AAFjB,IADF,CAfF,EAqBGG,wBAAwB,gBAErB,6BAAC,6BAAD;AACE,IAAA,YAAY,EAAEb,YADhB;AAEE,IAAA,YAAY,EAAEE,YAFhB;AAGE,IAAA,YAAY,EAAEE,YAHhB;AAIE,IAAA,YAAY,EAAEI;AAJhB,IAFqB,gBASrB,6BAAC,4BAAD;AAAqB,IAAA,IAAI,EAAEd;AAA3B,IA9BN,eA+BE,6BAAC,wBAAD;AACE,IAAA,WAAW,EAAEI,WADf;AAEE,IAAA,eAAe,EAAEiB,mBAFnB;AAGE,IAAA,gBAAgB,EAAEQ,oBAHpB;AAIE,IAAA,eAAe,EAAEZ;AAJnB,IA/BF,EAqCG,CAACE,wBAAD,iBACC;AAAG,IAAA,SAAS,EAAC;AAAb,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,mEADL;AAEE,IAAA,cAAc,EAAC;AAFjB,IADF,CADF,eAOE,qDACE,6BAAC,sBAAD;AACE,IAAA,EAAE,EAAC,kEADL;AAEE,IAAA,cAAc,EAAE,8CACd,0DADc,GAEd;AAJJ,IADF,CAPF,CAtCJ,CADF,EAyDG3B,qBAAqB,iBAAI,6BAAC,gCAAD;AAAyB,IAAA,WAAW,EAAEN;AAAtC,IAzD5B,eA0DE,6BAAC,eAAD,OA1DF,CADF;AA8DD,CAlHD;;AAoHAF,yCAAyC,CAACqD,SAA1C,GAAsD;AACpDpD,EAAAA,IAAI,EAAEqD,gBAAUC,UADoC;AAEpDrD,EAAAA,iBAAiB,EAAEsD,mBAAUC,IAAV,CAAeF;AAFkB,CAAtD;;eAKe,sBAAWvD,yCAAX,C","sourcesContent":["import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { Container } from '@edx/paragon';\nimport ExamStateContext from '../../../context';\nimport { ExamStatus } from '../../../constants';\nimport WarningModal from '../WarningModal';\nimport { pollExamAttempt, softwareDownloadAttempt } from '../../../data/api';\nimport messages from '../messages';\nimport ProviderInstructions from './ProviderInstructions';\nimport DefaultInstructions from './DefaultInstructions';\nimport DownloadButtons from './DownloadButtons';\nimport Footer from '../Footer';\nimport SkipProctoredExamButton from '../SkipProctoredExamButton';\n\nconst DownloadSoftwareProctoredExamInstructions = ({ intl, skipProctoredExam }) => {\n  const state = useContext(ExamStateContext);\n  const {\n    proctoringSettings,\n    exam,\n    getExamAttemptsData,\n    allowProctoringOptOut,\n  } = state;\n  const {\n    attempt,\n    course_id: courseId,\n    content_id: sequenceId,\n  } = exam;\n  const {\n    exam_started_poll_url: pollUrl,\n    attempt_code: examCode,\n    attempt_id: attemptId,\n    software_download_url: downloadUrl,\n  } = attempt;\n  const {\n    provider_name: providerName,\n    provider_tech_support_email: supportEmail,\n    provider_tech_support_phone: supportPhone,\n    exam_proctoring_backend: proctoringBackend,\n  } = proctoringSettings;\n  const { instructions } = proctoringBackend || {};\n  const [systemCheckStatus, setSystemCheckStatus] = useState('');\n  const [downloadClicked, setDownloadClicked] = useState(false);\n  const withProviderInstructions = instructions && instructions.length > 0;\n\n  const handleDownloadClick = () => {\n    pollExamAttempt(`${pollUrl}?sourceid=instructions`)\n      .then((data) => {\n        if (data.status === ExamStatus.READY_TO_START) {\n          setSystemCheckStatus('success');\n        } else {\n          softwareDownloadAttempt(attemptId);\n          window.open(downloadUrl, '_blank');\n        }\n      });\n    setDownloadClicked(true);\n  };\n\n  const handleStartExamClick = () => {\n    pollExamAttempt(`${attempt.exam_started_poll_url}?sourceid=instructions`)\n      .then((data) => (\n        data.status === ExamStatus.READY_TO_START\n          ? getExamAttemptsData(courseId, sequenceId)\n          : setSystemCheckStatus('failure')\n      ));\n  };\n\n  return (\n    <div>\n      <Container className=\"border py-5 mb-4\">\n        <WarningModal\n          isOpen={Boolean(systemCheckStatus)}\n          title={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalTitle)\n              : intl.formatMessage(messages.cannotStartModalTitle)\n          }\n          body={\n            systemCheckStatus === 'success'\n              ? intl.formatMessage(messages.softwareLoadedModalBody)\n              : intl.formatMessage(messages.cannotStartModalBody)\n          }\n          handleClose={() => setSystemCheckStatus('')}\n        />\n        <div className=\"h3\" data-testid=\"exam-instructions-title\">\n          <FormattedMessage\n            id=\"exam.DownloadSoftwareProctoredExamInstructions.title\"\n            defaultMessage=\"Set up and start your proctored exam.\"\n          />\n        </div>\n        {withProviderInstructions\n          ? (\n            <ProviderInstructions\n              providerName={providerName}\n              supportEmail={supportEmail}\n              supportPhone={supportPhone}\n              instructions={instructions}\n            />\n          )\n          : <DefaultInstructions code={examCode} />}\n        <DownloadButtons\n          downloadUrl={downloadUrl}\n          onDownloadClick={handleDownloadClick}\n          onStartExamClick={handleStartExamClick}\n          downloadClicked={downloadClicked}\n        />\n        {!withProviderInstructions && (\n          <p className=\"pt-3\">\n            <div className=\"h4\">\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.title\"\n                defaultMessage=\"Step 3.\"\n              />\n            </div>\n            <p>\n              <FormattedMessage\n                id=\"exam.DefaultDownloadSoftwareProctoredExamInstructions.step3.body\"\n                defaultMessage={'For security and exam integrity reasons, '\n                + 'we ask you to sign in to your edX account. Then we will '\n                + 'direct you to the RPNow proctoring experience.'}\n              />\n            </p>\n          </p>\n        )}\n      </Container>\n      {allowProctoringOptOut && <SkipProctoredExamButton handleClick={skipProctoredExam} />}\n      <Footer />\n    </div>\n  );\n};\n\nDownloadSoftwareProctoredExamInstructions.propTypes = {\n  intl: intlShape.isRequired,\n  skipProctoredExam: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(DownloadSoftwareProctoredExamInstructions);\n"],"file":"index.js"}