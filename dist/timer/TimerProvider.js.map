{"version":3,"sources":["../../src/timer/TimerProvider.jsx"],"names":["GRACE_PERIOD_SECS","POLL_INTERVAL","TimerContext","React","createContext","mapStateToProps","state","activeAttempt","examState","attempt","getFormattedRemainingTime","timeLeft","hours","Math","floor","minutes","seconds","TimerServiceProvider","children","pollHandler","pingHandler","timeState","setTimeState","limitReached","setLimitReached","workerUrl","desktop_application_js_url","pingInterval","ping_interval","timeRemaining","time_remaining_seconds","criticalLowTime","critically_low_threshold_sec","lowTime","low_threshold_sec","startValue","LIMIT","getTimeString","Object","values","map","item","value","join","pollExam","url","exam_started_poll_url","queryString","taking_as_proctored","processTimeLeft","timer","secondsLeft","Emitter","emit","TIMER_IS_CRITICALLY_LOW","TIMER_IS_LOW","TIMER_REACHED_NULL","clearInterval","TIMER_LIMIT_REACHED","timerTick","interval","setInterval","propTypes","PropTypes","shape","number","isRequired","string","bool","attempt_status","element","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useToggle } from '@edx/paragon';\nimport { Emitter } from '../data';\nimport {\n  TIMER_IS_CRITICALLY_LOW,\n  TIMER_IS_LOW,\n  TIMER_LIMIT_REACHED,\n  TIMER_REACHED_NULL,\n} from './events';\nimport { withExamStore } from '../hocs';\n\n/* give an extra 5 seconds where the timer holds at 00:00 before page refreshes */\nconst GRACE_PERIOD_SECS = 5;\nconst POLL_INTERVAL = 60;\n\nexport const TimerContext = React.createContext({});\n\nconst mapStateToProps = (state) => {\n  const { activeAttempt } = state.examState;\n  return { attempt: activeAttempt };\n};\n\nconst getFormattedRemainingTime = (timeLeft) => ({\n  hours: Math.floor(timeLeft / (60 * 60)),\n  minutes: Math.floor((timeLeft / 60) % 60),\n  seconds: Math.floor(timeLeft % 60),\n});\n\nconst TimerServiceProvider = ({\n  children, attempt, pollHandler, pingHandler,\n}) => {\n  const [timeState, setTimeState] = useState({});\n  const [limitReached, setLimitReached] = useToggle(false);\n  const {\n    desktop_application_js_url: workerUrl,\n    ping_interval: pingInterval,\n    time_remaining_seconds: timeRemaining,\n    critically_low_threshold_sec: criticalLowTime,\n    low_threshold_sec: lowTime,\n  } = attempt;\n  const startValue = Math.floor(timeRemaining);\n  const LIMIT = GRACE_PERIOD_SECS ? 0 - GRACE_PERIOD_SECS : 0;\n\n  const getTimeString = () => Object.values(timeState).map(\n    item => {\n      // Do not show timer negative value.\n      // User will see 00:00:00 during grace period if any.\n      const value = item < 0 ? 0 : item;\n      return (value < 10 ? `0${value}` : value);\n    },\n  ).join(':');\n\n  const pollExam = () => {\n    const url = attempt.exam_started_poll_url;\n    const queryString = `?sourceid=in_exam&proctored=${attempt.taking_as_proctored}`;\n    pollHandler(url + queryString);\n  };\n\n  const processTimeLeft = (timer, secondsLeft) => {\n    if (secondsLeft <= criticalLowTime) {\n      Emitter.emit(TIMER_IS_CRITICALLY_LOW);\n    } else if (secondsLeft <= lowTime) {\n      Emitter.emit(TIMER_IS_LOW);\n    }\n    // Used to hide continue exam button on submit exam pages.\n    // Since TIME_LIMIT_REACHED is fired after the grace period we\n    // need to emit separate event when timer reaches 00:00\n    if (secondsLeft <= 0) {\n      Emitter.emit(TIMER_REACHED_NULL);\n    }\n    if (!limitReached && secondsLeft < LIMIT) {\n      clearInterval(timer);\n      setLimitReached();\n      Emitter.emit(TIMER_LIMIT_REACHED);\n    }\n  };\n\n  useEffect(() => {\n    let secondsLeft = startValue;\n    let timerTick = 0;\n    const interval = setInterval(() => {\n      secondsLeft -= 1;\n      timerTick += 1;\n      setTimeState(getFormattedRemainingTime(secondsLeft));\n      processTimeLeft(interval, secondsLeft);\n      // no polling during grace period\n      if (timerTick % POLL_INTERVAL === 0 && secondsLeft >= 0) {\n        pollExam();\n      }\n\n      // if exam is proctored ping provider app also\n      if (workerUrl && timerTick % pingInterval === pingInterval / 2) {\n        pingHandler(pingInterval, workerUrl);\n      }\n    }, 1000);\n\n    return () => { clearInterval(interval); };\n  }, []);\n\n  return (\n    <TimerContext.Provider value={{\n      timeState,\n      getTimeString,\n    }}\n    >\n      {children}\n    </TimerContext.Provider>\n  );\n};\n\nTimerServiceProvider.propTypes = {\n  attempt: PropTypes.shape({\n    time_remaining_seconds: PropTypes.number.isRequired,\n    critically_low_threshold_sec: PropTypes.number.isRequired,\n    low_threshold_sec: PropTypes.number.isRequired,\n    exam_started_poll_url: PropTypes.string,\n    desktop_application_js_url: PropTypes.string,\n    ping_interval: PropTypes.number,\n    taking_as_proctored: PropTypes.bool,\n    attempt_status: PropTypes.string.isRequired,\n  }).isRequired,\n  children: PropTypes.element.isRequired,\n  pollHandler: PropTypes.func,\n  pingHandler: PropTypes.func,\n};\n\nTimerServiceProvider.defaultProps = {\n  pollHandler: () => {},\n  pingHandler: () => {},\n};\n\nexport default withExamStore(TimerServiceProvider, mapStateToProps);\n"],"file":"TimerProvider.js"}